{
	"openapi": "3.0.0",
	"info": {
		"title": "Task Management API",
		"description": "API for managing tasks",
		"version": "1.0.0"
	},
	"servers": [
		{
			"url": "http://localhost:3000",
			"description": "Development server"
		},
		{
			"url": "https://manage-tasks-api-ten.vercel.app",
			"description": "Production server"
		}
	],
	"tags": [
		{
			"name": "Tasks",
			"description": "Task management endpoints"
		}
	],
	"paths": {
		"/api/tasks": {
			"get": {
				"tags": ["Tasks"],
				"summary": "Retrieve all tasks",
				"responses": {
					"200": {
						"$ref": "#/components/responses/TaskListResponse"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			},
			"post": {
				"tags": ["Tasks"],
				"summary": "Create a new task",
				"requestBody": {
					"$ref": "#/components/requestBodies/CreateTask"
				},
				"responses": {
					"201": {
						"$ref": "#/components/responses/TaskResponse"
					},
					"400": {
						"$ref": "#/components/responses/ValidationError"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			}
		},
		"/api/tasks/{id}": {
			"get": {
				"tags": ["Tasks"],
				"summary": "Retrieve a task by ID",
				"parameters": [
					{
						"$ref": "#/components/parameters/TaskId"
					}
				],
				"responses": {
					"200": {
						"$ref": "#/components/responses/TaskResponse"
					},
					"404": {
						"$ref": "#/components/responses/NotFound"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			},
			"put": {
				"tags": ["Tasks"],
				"summary": "Update an existing task",
				"parameters": [
					{
						"$ref": "#/components/parameters/TaskId"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/UpdateTask"
				},
				"responses": {
					"200": {
						"$ref": "#/components/responses/TaskResponse"
					},
					"400": {
						"$ref": "#/components/responses/ValidationError"
					},
					"404": {
						"$ref": "#/components/responses/NotFound"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			},
			"delete": {
				"tags": ["Tasks"],
				"summary": "Delete a task by ID",
				"parameters": [
					{
						"$ref": "#/components/parameters/TaskId"
					}
				],
				"responses": {
					"204": {
						"description": "Task successfully deleted"
					},
					"404": {
						"$ref": "#/components/responses/NotFound"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			}
		}
	},
	"components": {
		"parameters": {
			"TaskId": {
				"name": "id",
				"in": "path",
				"required": true,
				"schema": {
					"type": "integer"
				},
				"description": "The unique ID of the task"
			}
		},
		"requestBodies": {
			"CreateTask": {
				"description": "New task data",
				"required": true,
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/CreateTaskInput"
						}
					}
				}
			},
			"UpdateTask": {
				"description": "Updated task data",
				"required": true,
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/UpdateTaskInput"
						}
					}
				}
			}
		},
	"schemas": {
			"Task": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"description": "Task ID"
					},
					"title": {
						"type": "string",
						"description": "Task title"
					},
					"description": {
						"type": "string",
						"nullable": true,
						"description": "Task description"
					},
					"completed": {
						"type": "boolean",
						"description": "Task completion status"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time",
						"description": "Creation timestamp"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time",
						"description": "Last update timestamp"
					}
				}
			},
			"CreateTaskInput": {
				"type": "object",
				"required": ["title"],
				"properties": {
					"title": {
						"type": "string",
						"description": "Task title",
						"minLength": 3,
						"maxLength": 100
					},
					"description": {
						"type": "string",
						"description": "Task description",
						"nullable": true
					}
				}
			},
			"UpdateTaskInput": {
				"type": "object",
				"properties": {
					"title": {
						"type": "string",
						"description": "Task title",
						"minLength": 3,
						"maxLength": 100
					},
					"description": {
						"type": "string",
						"description": "Task description",
						"nullable": true
					},
					"completed": {
						"type": "boolean",
						"description": "Task completion status"
					}
				}
			},
			"Error": {
				"type": "object",
				"properties": {
					"error": { "type": "string" },
					"message": {
						"type": "string"
					}
				}
			},
			"ValidationError": {
				"type": "object",
				"properties": {
					"errors": {
						"type": "array",
						"items": {
							"type": "object",
							"properties": {
								"type": {
									"type": "string"
								},
								"value": {
									"type": "string"
								},
								"msg": {
									"type": "string"
								},
								"path": {
									"type": "string"
								},
								"location": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"responses": {
			"TaskListResponse": {
				"description": "A list of tasks",
				"content": {
					"application/json": {
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/Task"
							}
						}
					}
				}
			},
			"TaskResponse": {
				"description": "Task details",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/Task"
						}
					}
				}
			},
			"NotFound": {
				"description": "Task not found",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/Error"
						}
					}
				}
			},
			"ValidationError": {
				"description": "Invalid input",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/ValidationError"
						}
					}
				}
			},
			"ServerError": {
				"description": "Internal server error",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/Error"
						}
					}
				}
			}
		}
	}
}
